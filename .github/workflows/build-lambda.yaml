name: Build and Package Lambdas

on:
  push:
    # branches: Maybe only limit to main instead of all pushes?
    # - main

jobs:
  pkg:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        lambda-name: ["securityhub-findings-manager"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          cd files/lambda-artifacts/${{ matrix.lambda-name }}
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create Lambda deployment package
        run: |
          cd files/lambda-artifacts/${{ matrix.lambda-name }}
          mkdir -p ../../pkg/${{ matrix.lambda-name }}
          cd venv/lib/python${{ matrix.python-version }}/site-packages
          # Removing nonessential files
          # remove boto3 and botocore (already available in Lambda Runtime)
          rm -rf boto* && \
          # remove boto3 dependencies
          rm -rf s3transfer* *dateutil* urllib3* six* jmespath* && \
          # remove debugging symbols
          find . -name '*.so' -type f -exec strip "{}" \; && \
          # remove tests
          find . -wholename "*/tests/*" -type f -delete && \
          # remove python bytecode
          find . -regex '^.*\(__pycache__\|\.py[co]\)$' -delete
          zip -r ../../../../../../pkg/${{ matrix.lambda-name }}/lambda_function_${{ matrix.python-version }}.zip .
          cd ../../../../
          zip -g ../../pkg/${{ matrix.lambda-name }}/lambda_function_${{ matrix.python-version }}.zip -r  * --exclude venv/\*

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.lambda-name }}-${{ matrix.python-version }}
          path: files/pkg/${{ matrix.lambda-name }}/lambda_function_${{ matrix.python-version }}.zip

  push:
    runs-on: ubuntu-latest
    needs: pkg

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Remove old pkg artifacts
        run: |
          rm -rf files/pkg/

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: files/pkg/

      - name: Move and rename artifacts
        run: |
          for dir in files/pkg/*; do
            if [ -d "$dir" ]; then
              lambda_name=$(basename $dir | sed 's/-[0-9]\.[0-9]\+$//')
              mkdir -p files/pkg/$lambda_name
              for file in $dir/*.zip; do
                mv "$file" "files/pkg/$lambda_name/"
              done
              rm -r "$dir"
            fi
          done

      - name: Commit deployment packages
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          git add files/pkg/**/*.zip
          git commit -m "Add all Lambda deployment packages from previous pkgs"

      - name: Push deployment packages
        run: |
          git push
